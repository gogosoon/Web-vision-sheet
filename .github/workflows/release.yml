name: Build/release desktop app

on:
  push:
    tags:
      - v*.*.*

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Install extra deps (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          npm install @rollup/rollup-darwin-arm64
          npm install dmg-license

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux

      - name: Build (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build:mac

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:win

      - name: List dist files
        run: |
          echo "Listing dist for ${{ matrix.os }}"
          ls -la dist || dir dist
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          if-no-files-found: ignore
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Show downloaded files
        run: ls -la dist

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}